<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Looking4U</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://luckyenough-z.github.io/atom.xml" rel="self"/>
  
  <link href="https://luckyenough-z.github.io/"/>
  <updated>2022-09-04T12:10:51.361Z</updated>
  <id>https://luckyenough-z.github.io/</id>
  
  <author>
    <name>张嘉译</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见代码案例</title>
    <link href="https://luckyenough-z.github.io/2022/09/04/%E5%B8%B8%E8%A7%81%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B/"/>
    <id>https://luckyenough-z.github.io/2022/09/04/%E5%B8%B8%E8%A7%81%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B/</id>
    <published>2022-09-04T04:59:48.000Z</published>
    <updated>2022-09-04T12:10:51.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外挂标签案例"><a href="#外挂标签案例" class="headerlink" title="外挂标签案例"></a>外挂标签案例</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line">5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line">6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><p>带 <u>下划线</u> 的文本<br>带 <emp>着重号</emp> 的文本<br>带 <wavy>波浪线</wavy> 的文本<br>带 <del>删除线</del> 的文本<br>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd><br>密码样式的文本：<psw>这里没有验证码</psw></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line">- 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><p>预览:</p><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><div class="note success simple"><p>success 提示块标签</p></div><p>复选列表<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><br>预览:<br><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><br><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><br><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><br><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><br><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><br><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><br><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><br><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><br><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div></p><p>视频<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>预览:<br><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></p><p>诗词标签<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div></p><p>math的使用<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">katex:</span><br><span class="line">  enable: true</span><br><span class="line">  # true 表示每一页都加载katex.js</span><br><span class="line">  # false 需要时加载，须在使用的Markdown Front-matter 加上 katex: true</span><br><span class="line">  per_page: false</span><br><span class="line">  hide_scrollbar: true</span><br></pre></td></tr></table></figure><br>文章制定插件<br>Npm部署方式<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-swiper-bar --save</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">cnpm i hexo-swiper-bar --save</span><br></pre></td></tr></table></figure><br>配置博客main_config<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">swiper:</span><br><span class="line">  enable: true</span><br><span class="line">  priority: 2</span><br><span class="line">  enable_page: /</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  temple_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;height: auto;width: 100%&quot;&gt;&lt;div class=&quot;blog-slider swiper-container-fade swiper-container-horizontal&quot; id=&quot;swiper_container&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure><br>参考于<a href="https://zfe.space/post/hexo-swiper.html">hexo置顶组件</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;外挂标签案例&quot;&gt;&lt;a href=&quot;#外挂标签案例&quot; class=&quot;headerlink&quot; title=&quot;外挂标签案例&quot;&gt;&lt;/a&gt;外挂标签案例&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网易云自动任务</title>
    <link href="https://luckyenough-z.github.io/2022/09/04/%E7%BD%91%E6%98%93%E4%BA%91%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1/"/>
    <id>https://luckyenough-z.github.io/2022/09/04/%E7%BD%91%E6%98%93%E4%BA%91%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1/</id>
    <published>2022-09-04T04:06:15.000Z</published>
    <updated>2022-09-04T04:07:54.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网易云音乐自动任务"><a href="#网易云音乐自动任务" class="headerlink" title="网易云音乐自动任务"></a>网易云音乐自动任务</h1><p>  <a href="https://music.163.com/#/user/home?id=347837981"><img alt="网易云音乐关注数" src="https://img.shields.io/badge/dynamic/json?color=e60026&label=%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90&query=%24.profile.followeds&url=http%3A%2F%2Fmusic.163.com%2Fapi%2Fv1%2Fuser%2Fdetail%2F347837981"></a>  <a href="http://www.coolapk.com/u/3189084"><img alt="酷安关注数" src="https://img.shields.io/badge/dynamic/json?color=0eb066&label=%E9%85%B7%E5%AE%89&query=%24.data.totalSubs&url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dcoolapk%26queryKey%3D3189084"></a></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li>签到领云贝</li><li>自动完成云贝任务，并领取云贝</li><li>打卡升级</li><li>刷指定歌曲的播放量</li><li>音乐人自动签到领取云豆</li><li>音乐人自动完成任务，并领取云豆</li><li>自动领取 vip 成长值</li><li>多种推送方式</li><li>支持多账号</li><li>支持<a href="#一部署到腾讯云函数">腾讯云函数</a> &amp; <a href="#二部署到青龙面板">青龙面板</a> &amp; <a href="#三本地运行">本地运行</a> &amp; <a href="#四使用docker部署">docker 部署</a></li></ol><blockquote><p>开发不易，如果你觉得本项目对你有用，可以点个 star，也可以到底部给个<a href="#赞赏">赞赏</a></p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>默认会在网易云音乐中关注作者，如果不想关注，可以在配置文件里<a href="#关注作者">修改</a></li><li>提 issue 之前看看是否有重复的 issue。</li><li>不要直接在 GitHub 上修改配置文件。已经修改了的，尽快覆盖，并修改密码。</li><li>转载请注明出处，并保留原作者信息。</li><li>禁止将代码用于商业用途，包括打包售卖，收费代挂等。</li><li>为了账号安全考虑，请勿将账号密码交给他人代挂。</li></ul><h2 id="一、部署到腾讯云函数"><a href="#一、部署到腾讯云函数" class="headerlink" title="一、部署到腾讯云函数"></a>一、部署到腾讯云函数</h2><h3 id="开通服务"><a href="#开通服务" class="headerlink" title="开通服务"></a>开通服务</h3><p>首次使用云函数，依次登录 <a href="https://console.cloud.tencent.com/scf">SCF 云函数控制台</a> 和 <a href="https://console.cloud.tencent.com/sls">SLS 控制台</a> 开通相关服务，确保账户下已开通服务并创建相应<a href="https://console.cloud.tencent.com/cam/role">服务角色</a> <strong>SCF_QcsRole、SLS_QcsRole</strong></p><blockquote><p>注意！为了确保权限足够，获取这两个参数时不要使用子账户！此外，腾讯云账户需要<a href="https://console.cloud.tencent.com/developer/auth">实名认证</a>。</p></blockquote><h3 id="获取密钥"><a href="#获取密钥" class="headerlink" title="获取密钥"></a>获取密钥</h3><p>在腾讯云<a href="https://console.cloud.tencent.com/cam/capi">API 密钥管理</a>新建密钥，获取 SecretId 和 SecretKey</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/getsecret.png" alt="Fork"></p><h3 id="fork-本项目"><a href="#fork-本项目" class="headerlink" title="fork 本项目"></a>fork 本项目</h3><p>在 GitHub 上 fork <a href="https://github.com/chen310/NeteaseCloudMusicTasks">本项目</a></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/fork.png" alt="Fork"></p><h3 id="创建-Secrets"><a href="#创建-Secrets" class="headerlink" title="创建 Secrets"></a>创建 Secrets</h3><p>fork 之后，点击右上方 <code>settings</code></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/settings.png" alt="Settings"></p><p>在页面点击 <code>Secrets</code>，点击 <code>Actions</code>，然后点击 <code>New repository secret</code> 创建新的 secret。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/newsecrets.png" alt="NewSecrets"></p><div class="table-container"><table><thead><tr><th style="text-align:left">Name</th><th style="text-align:left">Value</th><th style="text-align:left">是否必填</th></tr></thead><tbody><tr><td style="text-align:left">SECRET_ID</td><td style="text-align:left">填写之前获取的 SecretId</td><td style="text-align:left">必填</td></tr><tr><td style="text-align:left">SECRET_KEY</td><td style="text-align:left">填写之前获取的 SecretKey</td><td style="text-align:left">必填</td></tr><tr><td style="text-align:left">CRON</td><td style="text-align:left">定时触发器的时间</td><td style="text-align:left">选填</td></tr><tr><td style="text-align:left">FUNCTION_NAME</td><td style="text-align:left">自定义函数名</td><td style="text-align:left">选填</td></tr><tr><td style="text-align:left">REGION</td><td style="text-align:left">地域，默认为 ap-guangzhou</td><td style="text-align:left">选填</td></tr></tbody></table></div><p>先填写先前获取的 SECRET_ID</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/secretid.png" alt="SECRET_ID"></p><p>同理，填写先前获取的 SECRET_KEY</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/secretkey.png" alt="SECRET_KEY"></p><p>CRON 默认为 <code>0 30 0 * * * *</code> 表示每天 0 点 30 分触发。如需更改，则如下图所示创建此 secret，。比如：<code>0 20 12 * * * *</code> 表示每天 12 点 20 分触发，<code>0 0 12,16 * * * *</code> 表示每天 12 点和 16 点各触发一次。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/cron.png" alt="Cron"></p><p>FUNCTION_NAME 为函数名，不填写默认为 <code>NeteaseCloudMusicTasks</code>。如需更改，则创建此 secret，并填写自定义的函数名，命名规则：只能包含字母、数字、下划线、连字符，以字母开头，以数字或字母结尾，2~60 个字符。</p><p>REGION 默认为 <code>ap-guangzhou</code> ，可选的地域详见<a href="https://cloud.tencent.com/document/product/583/17238#.E5.9C.B0.E5.9F.9F.E5.88.97.E8.A1.A8">地域列表</a>。</p><p>添加完毕可以看到</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/secretlist.png" alt="Cron"></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>击项目上方的 <code>Actions</code></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/actions.png" alt="Actions"></p><p>点击 <code>All workflows</code> 下方的 <code>deploy</code>（移动端要先点击 <code>Select workflow</code>），再点击右侧 <code>Run workflow</code>，在弹出的页面再次点击 <code>Run workflow</code>，将会运行新的 workflow</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/runworkflow.png" alt="RunWorkflow"></p><p>运行后如果不显示，刷新一下页面即可看到正在运行的 workflow。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/workflow.png" alt="Workflow"></p><p>等到标志变成 ✅，表示已经部署成功。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/success.png" alt="Success"></p><p>如果发现标志变成 ❌，则表示部署失败。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/failure.png" alt="Failure"></p><p>可以点进这个 workflow 查看失败原因。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/failure2.png" alt="Failue"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><p>下载<a href="https://chen10.lanzouo.com/igHXzxf8wjc">依赖文件</a> ，也可以自己用 pip 下载依赖，然后打包。然后在<a href="https://console.cloud.tencent.com/scf/layer">高级能力</a>新建<code>层</code></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/layer.png" alt="Layer"></p><p><code>层名称</code>可以自己任意填写，然后上传刚刚下载的压缩包，点击<code>添加运行环境</code>，选择 <code>Python3.6</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/dependence.png" alt="Dependence"></p><p>在<a href="https://console.cloud.tencent.com/scf/list">函数服务</a>点进刚刚创建的函数</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/function.png" alt="Function"></p><p>点击上方的<code>层管理</code>，点击<code>绑定</code></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/bind1.png" alt="Bind"></p><p>选择刚刚创建的层。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/bind2.png" alt="Bind"></p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>在<a href="https://console.cloud.tencent.com/scf/list">函数服务</a>点进刚刚创建的函数</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/function.png" alt="Function"></p><p>在编辑器里点击 <code>config.json</code> 这个文件进行配置</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/config.png" alt="Config"></p><p>可以看到文件中有红色波浪线的错误提示，可以忽略不管，也可以下拉到编辑器的右下角，点击 <code>JSON</code> 来更改语言模式，选择 <code>JSON with Comments</code>，这样就可以消除错误提示。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/style.png" alt="Style"></p><p>在 <code>config.json</code> 里进行如下的账号配置。运行之后如果发现有些任务没有完成，可能是因为没有开启，将任务对应的 <code>enable</code> 字段设置为 <code>true</code> 即可开启。</p><h4 id="账号密码"><a href="#账号密码" class="headerlink" title="账号密码"></a>账号密码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;users&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;username&quot;: &quot;188xxxx8888&quot;,</span><br><span class="line">        &quot;countrycode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;mypassword&quot;,</span><br><span class="line">        &quot;cookie&quot;: &quot;MUSIC_U=xxxxxxxxx;&quot;,</span><br><span class="line">        &quot;X-Real-IP&quot;: &quot;&quot;,</span><br><span class="line">        &quot;enable&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p><code>username</code> 里填写手机号或邮箱，<code>password</code> 里填写账号密码或 32 位 md5 加密后的密码，<code>countrycode</code> 为手机号前缀，使用非中国大陆的手机号登录需填写。<code>X-Real-IP</code> 里填写国内 IP，否则可能会有无法登录等情况出现，可填写本机 IP，<a href="https://www.ip138.com/">点击</a>可查看本机 IP，填写显示的 ip 即可。<code>enable</code> 为该账号的开关，设置为 <code>false</code> 表示不运行该账号的任务。</p><p>如果同时填写了账号密码和 <code>cookie</code>， 会优先使用 cookie 登录，如果 cookie 填写有误或失效，会尝试使用账号密码登录。</p><p>cookie 获取方式：首先在网页登录<a href="https://music.163.com/">网易云音乐</a>，然后按 <code>F12</code> 打开开发人员工具，再按 <code>F5</code> 刷新页面，最后按照以下步骤来获取 cookie，可以只复制 <code>MUSIC_U</code> 的那部分</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/cookie.png" alt="Cookie"></p><h4 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;sign&quot;: true,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>签到默认开启，连续签到可以获得更多云贝。</p><h4 id="刷听歌量"><a href="#刷听歌量" class="headerlink" title="刷听歌量"></a>刷听歌量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;daka&quot;: &#123;</span><br><span class="line">        &quot;enable&quot;: true,</span><br><span class="line">        &quot;full_stop&quot;: true,</span><br><span class="line">        &quot;auto&quot;: true,</span><br><span class="line">        &quot;tolerance&quot;: 10,</span><br><span class="line">        &quot;song_number&quot;: 300,</span><br><span class="line">        // ...</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个账号每天最多只计算 300 首的听歌量，而且必须是没有听过的歌曲。<code>enable</code> 表示开启刷听歌量的任务，<code>full_stop</code> 表示满级后自动停止任务，无需手动将 <code>enable</code> 设为 <code>false</code>。<code>song_number</code> 表示每次要刷的歌曲数量，账号等级较低的时候可以设置得小一点，不然等级高的时候就难刷了，可能较难刷满 300 首。</p><p><code>auto</code> 设置为 <code>true</code> 的话表示开启自动模式，程序将自动调整每次打卡的歌曲数，<code>song_number</code> 参数将失效。此时，每天 0 点时定时触发器会自动运行代码，获取当前的听歌数，并写入环境变量中，这样的话就可以比较精确地计算每次打卡的歌曲数。<code>tolerance</code> 表示对打卡误差的容忍度，在自动打卡模式下有效，如果设置为 0 表示必须要达到 300 首才停止打卡，10 表示达到 290 首就可以停止打卡。</p><h4 id="云贝任务"><a href="#云贝任务" class="headerlink" title="云贝任务"></a>云贝任务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;yunbei_task&quot;: &#123;</span><br><span class="line">        &quot;162005&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;发布动态&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;publishEvent&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 需要分享的歌单id</span><br><span class="line">            &quot;id&quot;: [],</span><br><span class="line">            &quot;msg&quot;: [&quot;每日分享&quot;,&quot;今日分享&quot;,&quot;分享歌单&quot;],</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;216002&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;访问云音乐商城&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;visitMall&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;200002&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;云贝推歌&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;rcmdSong&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写歌曲ID</span><br><span class="line">            &quot;songId&quot;: [],</span><br><span class="line">            &quot;yunbeiNum&quot;: 10,</span><br><span class="line">            &quot;reason&quot;: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;162006&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;发布Mlog&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;publishMlog&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写歌曲ID</span><br><span class="line">            &quot;songId&quot;: [],</span><br><span class="line">            /* 动态内容，随机选取一个，其中$artist会被替换为歌手名，$song会被替换为歌曲名 */</span><br><span class="line">            &quot;text&quot;: [</span><br><span class="line">                &quot;分享$artist的歌曲: $song&quot;,</span><br><span class="line">                &quot;分享歌曲: $song&quot;</span><br><span class="line">            ],</span><br><span class="line">            /* 图片大小，越大则消耗的外网出流量越多 */</span><br><span class="line">            &quot;size&quot;: 500,</span><br><span class="line">            /* 发布成功后是否自动删除该动态 */</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;166000&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;分享歌曲/歌单&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;share&quot;,</span><br><span class="line">            &quot;enable&quot;: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;656007&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;浏览会员中心&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;visitVipCenter&quot;,</span><br><span class="line">            &quot;enable&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>发布动态</code>任务要分享歌单，可获得 5 云贝，可通过将 <code>enable</code> 设为 <code>true</code> 开启，<code>id</code> 要填写需要分享的歌单 id，可不填写，随机送推荐歌单中选取。<code>delete</code> 表示动态发布之后自动删除。</p><p><code>访问云音乐商城</code>任务可获得 2 云贝。</p><p><code>云贝推歌</code>任务使用云贝对喜欢的歌曲进行推荐，可获得 10 云贝。<code>songId</code> 填写喜欢的歌曲 id，如<code>[65528, 64634]</code>，程序将会随机挑选一首歌，<code>yunbeiNum</code> 是要使用的云贝数量，一般为 <code>10</code>，<code>reason</code> 填写推歌理由。</p><p><code>发布Mlog</code> 根据填写的歌曲 ID，自动下载歌曲对应的专辑图片，并上传。<code>songId</code> 填写歌曲 id，如<code>[65528, 64634]</code>，<code>text</code> 填写动态内容</p><p><code>分享歌曲/歌单</code>任务并不会真的分享，将 <code>enable</code> 设为 <code>true</code> 即可开启任务</p><p><code>浏览会员中心</code>将 <code>enable</code> 设为 <code>true</code> 即可开启任务</p><h4 id="音乐人任务"><a href="#音乐人任务" class="headerlink" title="音乐人任务"></a>音乐人任务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;musician_task&quot;: &#123;</span><br><span class="line">        &quot;749006&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;音乐人中心签到&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;musicianSignin&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;740004&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;发布动态&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;publishEvent&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 自定义要分享的歌单id，用逗号隔开，分享时随机选取一个，若为空，则从每日推荐歌单中随机选取</span><br><span class="line">            &quot;id&quot;: [],</span><br><span class="line">            &quot;msg&quot;: [&quot;每日分享&quot;,&quot;今日分享&quot;,&quot;分享歌单&quot;],</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;755000&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;发布主创说&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;publishComment&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写你自己歌曲的id，如有多首用,隔开，随机挑选一首</span><br><span class="line">            &quot;id&quot;: [],</span><br><span class="line">            &quot;msg&quot;: [&quot;感谢大家收听&quot;],</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;732004&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;回复粉丝评论&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;replyComment&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写你自己歌曲的id，如有多首用,隔开，随机挑选一首</span><br><span class="line">            &quot;id&quot;: [],</span><br><span class="line">            &quot;msg&quot;: [&quot;感谢收听&quot;],</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;755001&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;回复粉丝私信&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;sendPrivateMsg&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写粉丝的用户id，如有多个用,隔开，随机挑选一个进行回复,可以用自己的小号</span><br><span class="line">            &quot;id&quot;: [],</span><br><span class="line">            &quot;msg&quot;: [&quot;你好&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;739008&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;观看课程&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;watchCollegeLesson&quot;,</span><br><span class="line">            &quot;enable&quot;: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;740005&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;访问自己的云圈&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;visitMyCircle&quot;,</span><br><span class="line">            &quot;enable&quot;: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;744005&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;发布mlog&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;publishMlog&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            // 填写歌曲ID</span><br><span class="line">            &quot;songId&quot;: [],</span><br><span class="line">            /* 动态内容，随机选取一个，其中$artist会被替换为歌手名，$song会被替换为歌曲名 */</span><br><span class="line">            &quot;text&quot;: [</span><br><span class="line">                &quot;分享$artist的歌曲: $song&quot;,</span><br><span class="line">                &quot;分享歌曲: $song&quot;</span><br><span class="line">            ],</span><br><span class="line">            /* 图片大小，越大则消耗的外网出流量越多 */</span><br><span class="line">            &quot;size&quot;: 500,</span><br><span class="line">            /* 发布成功后是否自动删除该动态 */</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要是音乐人才能执行，想要开启相应的任务，需要将 <code>enable</code> 由 <code>false</code> 改为 <code>true</code>，<code>登录音乐人中心</code>自动开启，其他任务根据实际情况开启。<code>登录音乐人中心</code>即签到获取云豆；<code>发布动态</code>即转发歌单；<code>发布主创说</code>即在自己的歌曲评论区留言；<code>回复粉丝评论</code>即在自己歌曲的评论区回复粉丝留言，该任务是通过回复自己的留言实现的；<code>回复粉丝私信</code>需要填写粉丝 id，可用小号。</p><h4 id="VIP-成长值任务"><a href="#VIP-成长值任务" class="headerlink" title="VIP 成长值任务"></a>VIP 成长值任务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;vip_task&quot;: &#123;</span><br><span class="line">        &quot;816&quot;: &#123;</span><br><span class="line">            &quot;taskName&quot;: &quot;创建共享歌单&quot;,</span><br><span class="line">            &quot;module&quot;: &quot;createSharedPlaylist&quot;,</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            /* 自定义歌单名，用逗号隔开，随机选取一个 */</span><br><span class="line">            &quot;name&quot;: [</span><br><span class="line">                &quot;歌单&quot;,</span><br><span class="line">                &quot;我的歌单&quot;</span><br><span class="line">            ],</span><br><span class="line">            /* 创建成功后是否自动删除该动态 */</span><br><span class="line">            &quot;delete&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>创建共享歌单</code> 任务默认关闭，需要开启的话将 <code>enable</code> 设为 <code>true</code>，<code>name</code> 里填写自定义的歌单名，创建时随机选取一个，<code>delete</code>表示歌单创建成功后时候自动删除。</p><h4 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h4><p>支持多种推送方式，建议使用企业微信进行推送</p><ol><li>企业微信</li><li><a href="https://sct.ftqq.com/">server 酱</a></li><li>酷推</li><li><a href="https://www.pushplus.plus">pushPlus</a></li><li>Telegram</li><li><a href="https://github.com/Finb/Bark">Bark</a></li></ol><p>要使用推送的话将相应的 <code>enable</code> 设为 <code>true</code>，并填写配置</p><h5 id="企业微信"><a href="#企业微信" class="headerlink" title="企业微信"></a>企业微信</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;WeCom&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;WeCom&quot;,</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    &quot;corpid&quot;: &quot;&quot;,</span><br><span class="line">    &quot;agentid&quot;: &quot;&quot;,</span><br><span class="line">    &quot;secret&quot;: &quot;&quot;,</span><br><span class="line">    &quot;userid&quot;: &quot;@all&quot;,</span><br><span class="line">    &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送 */</span><br><span class="line">    &quot;merge&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册企业微信账号可参考<a href="https://sct.ftqq.com/forward">这里</a></p><p><code>corpid</code> 为企业 ID，登录企业微信后在管理后台<code>我的企业</code>－<code>企业信息</code>下查看；<code>agentid</code> 为应用 ID，在<code>应用管理</code>里，点进相应的应用可查看；<code>secret</code> 为应用密钥，在<code>应用管理</code>里，点进相应的应用可查看；<code>userid</code> 默认为<code>@all</code>，会向该企业应用的全部成员发送；<code>msgtype</code> 为消息类型，可填写文本消息 <code>text</code>、文本卡片消息 <code>textcard</code> 或 markdown 消息 <code>markdown</code>，markdown 消息不能在微信里查看，只能在企业微信里查看。</p><h5 id="server-酱"><a href="#server-酱" class="headerlink" title="server 酱"></a>server 酱</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;serverChan&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;serverChan&quot;,</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    &quot;KEY&quot;: &quot;&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送 */</span><br><span class="line">    &quot;merge&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用 server 酱的话需要在 <code>KEY</code> 里填写旧版的 SCKEY 或新版的 SendKey。</p><h5 id="酷推"><a href="#酷推" class="headerlink" title="酷推"></a>酷推</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;CoolPush&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;CoolPush&quot;,</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    /* 推送方式: send QQ号私人推送 | group QQ群推送 | wx 微信推送 | email 邮件推送 */</span><br><span class="line">    &quot;method&quot;: &quot;send&quot;,</span><br><span class="line">    &quot;Skey&quot;: &quot;&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送 */</span><br><span class="line">    &quot;merge&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用酷推的话需要填写 <code>Skey</code>。</p><h5 id="pushPlus-微信推送"><a href="#pushPlus-微信推送" class="headerlink" title="pushPlus 微信推送"></a>pushPlus 微信推送</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;pushPlus&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;pushPlus&quot;,</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    &quot;pushToken&quot;: &quot;&quot;,</span><br><span class="line">    /* 消息模板:  markdown | html | txt | json */</span><br><span class="line">    &quot;template&quot;: &quot;markdown&quot;,</span><br><span class="line">    /* 群组编码，为空时发给自己 */</span><br><span class="line">    &quot;topic&quot;: &quot;&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送 */</span><br><span class="line">    &quot;merge&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用酷推的话需要填写 <code>pushToken</code>。</p><h5 id="Telegram-推送"><a href="#Telegram-推送" class="headerlink" title="Telegram 推送"></a>Telegram 推送</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;Telegram&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;Telegram&quot;,</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    /* Telegram账号ID */</span><br><span class="line">    &quot;userId&quot;: &quot;&quot;,</span><br><span class="line">    /* TG机器人token */</span><br><span class="line">    &quot;botToken&quot;: &quot;&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送 */</span><br><span class="line">    &quot;merge&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用 Telegram 的话需要填写 <code>userId</code> 和 <code>botToken</code>。</p><h5 id="Bark-推送"><a href="#Bark-推送" class="headerlink" title="Bark 推送"></a>Bark 推送</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;Bark&quot;: &#123;</span><br><span class="line">    &quot;module&quot;: &quot;Bark&quot;,</span><br><span class="line">    /* 是否启用Bark推送 */</span><br><span class="line">    &quot;enable&quot;: false,</span><br><span class="line">    /* Bark的地址 */</span><br><span class="line">    &quot;Bark_url&quot;: &quot;&quot;,</span><br><span class="line">    /* Bark的API key */</span><br><span class="line">    &quot;Bark_key&quot;: &quot;&quot;,</span><br><span class="line">    /* 是否将多个账号的信息合并推送, 建议为false，iOS推送消息过长可能会失败 */</span><br><span class="line">    &quot;merge&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用 Bark 的话需要填写 <code>Bark_url</code> 和 <code>Bark_key</code>。可以使用 Bark 官方 API 或者自行搭建。</p><h4 id="刷单曲播放量"><a href="#刷单曲播放量" class="headerlink" title="刷单曲播放量"></a>刷单曲播放量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;other&quot;: &#123;</span><br><span class="line">        /* 刷歌单中歌曲的播放次数，用来改变听歌风格，仅在需要时使用 */</span><br><span class="line">        &quot;play_playlists&quot;: &#123;</span><br><span class="line">            &quot;enable&quot;: false,</span><br><span class="line">            /* 歌单id,用逗号隔开,如 [5279371062,5279377564] */</span><br><span class="line">            &quot;playlist_ids&quot;: [],</span><br><span class="line">            /* 播放次数 */</span><br><span class="line">            &quot;times&quot;: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将要刷的歌曲加到歌单中，把歌单 id 填写到 <code>playlist_ids</code> 中，可以添加多个歌单 id，用英文逗号隔开，如 <code>&quot;playlist_ids&quot;:[5279371062,5279377564]</code>。该功能可以用来改变听歌风格。</p><h4 id="多账号"><a href="#多账号" class="headerlink" title="多账号"></a>多账号</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;users&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;username&quot;: &quot;188xxxx8888&quot;,</span><br><span class="line">        &quot;countrycode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;mypassword&quot;,</span><br><span class="line">        &quot;cookie&quot;: &quot;&quot;,</span><br><span class="line">        &quot;enable&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;username&quot;: &quot;166xxxx6666&quot;,</span><br><span class="line">        &quot;countrycode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;anotherpassword&quot;,</span><br><span class="line">        &quot;cookie&quot;: &quot;MUSIC_U=xxxxxxxxx;&quot;,</span><br><span class="line">        &quot;X-Real-IP&quot;: &quot;&quot;,</span><br><span class="line">        &quot;enable&quot;: true,</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p>在 <code>users</code> 内填写多个账号，不同账号之间要用逗号 <code>,</code> 隔开。</p><p>假如多个账号配置不同可以参照下面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;users&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;username&quot;: &quot;188xxxx8888&quot;,</span><br><span class="line">        &quot;countrycode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;mypassword&quot;,</span><br><span class="line">        &quot;cookie&quot;: &quot;&quot;,</span><br><span class="line">        &quot;X-Real-IP&quot;: &quot;&quot;,</span><br><span class="line">        &quot;enable&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;username&quot;: &quot;166xxxx6666&quot;,</span><br><span class="line">        &quot;countrycode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;anotherpassword&quot;,</span><br><span class="line">        &quot;cookie&quot;: &quot;MUSIC_U=xxxxxxxxx;&quot;,</span><br><span class="line">        &quot;X-Real-IP&quot;: &quot;&quot;,</span><br><span class="line">        &quot;enable&quot;: true,</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;push&quot;: &#123;</span><br><span class="line">                &quot;serverChan&quot;: &#123;</span><br><span class="line">                    &quot;KEY&quot;: &quot;xxxxxxxxxx&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;yunbei_task&quot;: &#123;</span><br><span class="line">                &quot;200002&quot;: &#123;</span><br><span class="line">                    &quot;songId&quot;: [25707139],</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p>如上所示，在第二个账号中加入了 <code>setting</code> 字段，并填写与公共配置不同的地方。这样一来，两个账号就使用了不同的 server 酱推送，并使用不同的歌曲进行云贝推歌。</p><h4 id="关注作者"><a href="#关注作者" class="headerlink" title="关注作者"></a>关注作者</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    &quot;follow&quot;: true</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认会在网易云音乐中关注作者，不想关注可将 <code>true</code> 改为 <code>false</code>。已经关注了的可到网易云音乐 APP 里取消关注。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>修改完代码后，按 ctrl+s 保存代码，然后点击编辑器右上角的<code>部署</code>（每次修改完都要重新部署），左下角的<code>部署</code>也行。部署完成后点击部署旁边的测试按钮，观察结果，如果失败则检查修改代码。</p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/test.png" alt="Test"></p><p><a href="https://cloud.tencent.com/document/product/628/39300">计费方式</a></p><h3 id="更新代码"><a href="#更新代码" class="headerlink" title="更新代码"></a>更新代码</h3><p>在 GitHub 项目页面点击 <code>Fetch upstream</code> - <code>Fetch and merge</code></p><p><img src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/update.png" alt="Update"></p><p>此时，更新后的代码会自动部署到腾讯云函数中，可以到 <code>Actions</code> 中查看部署进度。更新后，配置文件自动同步，无需再次填写，但注释会被删除，如果需要修改配置文件，可以参考 <code>config.example.json</code> 文件中的注释。进入到云函数中时，如果提醒“检测到当前工作区函数和已部署函数不一致，重新加载已部署函数?”，点击<code>确认</code>即可。</p><p>如果修改了 Secrets，需要手动部署才会生效，详见<a href="#部署">部署</a>。</p><h2 id="二、部署到青龙面板"><a href="#二、部署到青龙面板" class="headerlink" title="二、部署到青龙面板"></a>二、部署到青龙面板</h2><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><p>如果容器名称不是 <code>qinglong</code> 则需要修改。</p><h3 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/chen310/NeteaseCloudMusicTasks.git &quot;index.py&quot; &quot;&quot; &quot;py&quot;</span><br></pre></td></tr></table></figure><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">task chen310_NeteaseCloudMusicTasks/ql_update.py</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apk add python3-dev gcc libc-dev</span><br><span class="line">pip3 install requests json5 pycryptodomex</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>对配置文件 <code>config.json</code> 进行修改</p><h3 id="更新代码-1"><a href="#更新代码-1" class="headerlink" title="更新代码"></a>更新代码</h3><p>如果需要更新代码则同样先进入容器</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><p>然后再更新</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/chen310/NeteaseCloudMusicTasks.git &quot;index.py&quot; &quot;&quot; &quot;py&quot;</span><br><span class="line">task chen310_NeteaseCloudMusicTasks/ql_update.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、本地运行"><a href="#三、本地运行" class="headerlink" title="三、本地运行"></a>三、本地运行</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>拉取代码</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/chen310/NeteaseCloudMusicTasks.git</span><br></pre></td></tr></table></figure><h3 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>切换到项目目录</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd NeteaseCloudMusicTasks</span><br></pre></td></tr></table></figure><p>然后安装依赖</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>首先将 <code>config.example.json</code> 文件复制为 <code>config.json</code> 文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp config.example.json config.json</span><br></pre></td></tr></table></figure><p>然后对配置文件 <code>config.json</code> 进行修改。</p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 index.py</span><br></pre></td></tr></table></figure><h3 id="更新代码-2"><a href="#更新代码-2" class="headerlink" title="更新代码"></a>更新代码</h3><p>首先更新代码</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>然后更新配置文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 ./updateconfig.py config.example.json config.json config.json</span><br></pre></td></tr></table></figure><h2 id="四、使用docker部署"><a href="#四、使用docker部署" class="headerlink" title="四、使用docker部署"></a>四、使用<code>docker</code>部署</h2><blockquote><ol><li>支持 ARM64/AMD64 docker 镜像</li><li>支持指定时间定时执行</li><li>未指定定时执行时间，每次重启随机设定执行时间</li></ol></blockquote><h3 id="下载并配置-config-json"><a href="#下载并配置-config-json" class="headerlink" title="下载并配置 config.json"></a>下载并配置 <code>config.json</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL -o config.json https://raw.githubusercontent.com/chen310/NeteaseCloudMusicTasks/main/config.example.json</span><br></pre></td></tr></table></figure><h3 id="随机时间执行"><a href="#随机时间执行" class="headerlink" title="随机时间执行"></a>随机时间执行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -itd --restart=on-failure \</span><br><span class="line">    -v $(pwd)/config.json:/root/config.json \</span><br><span class="line">    --name netease-cloud-music-tasks \</span><br><span class="line">    enwaiax/netease-cloud-music-tasks:latest</span><br></pre></td></tr></table></figure><h3 id="指定时间执行"><a href="#指定时间执行" class="headerlink" title="指定时间执行"></a>指定时间执行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -itd --restart=on-failure \</span><br><span class="line">    -v $(pwd)/config.json:/root/config.json \</span><br><span class="line">    -e &quot;SCHEDULER_HOUR=8&quot; -e &quot;SCHEDULER_MINUTE=30&quot; \</span><br><span class="line">    --name netease-cloud-music-tasks \</span><br><span class="line">    enwaiax/netease-cloud-music-tasks:latest</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="对日推的影响"><a href="#对日推的影响" class="headerlink" title="对日推的影响"></a>对日推的影响</h3><p>打卡功能可能会影响日推，介意慎用。</p><h3 id="云函数免费额度及计费方式"><a href="#云函数免费额度及计费方式" class="headerlink" title="云函数免费额度及计费方式"></a>云函数免费额度及计费方式</h3><p>在云函数<a href="https://console.cloud.tencent.com/scf/index">概览</a>界面，可以查看本月剩余免费额度</p><p>详见<a href="https://cloud.tencent.com/document/product/583/17299">计费概述</a></p><h3 id="赞赏"><a href="#赞赏" class="headerlink" title="赞赏"></a>赞赏</h3><p><p align="left">微信</p> <img width="300" height="300" src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/wechatpay.png" /></p><p><p align="left">支付宝</p> <img width="300" height="300" src="https://cdn.jsdelivr.net/gh/chen310/NeteaseCloudMusicTasks/public/img/alipay.png" /></p><h3 id="star-数"><a href="#star-数" class="headerlink" title="star 数"></a>star 数</h3><p><a href="https://starchart.cc/chen310/NeteaseCloudMusicTasks"><img src="https://starchart.cc/chen310/NeteaseCloudMusicTasks.svg" alt="Stargazers over time"></a></p><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><ul><li>本仓库中的脚本仅用于测试和学习目的，请勿用于商业或非法目的，否则后果自负</li><li>转载请注明出处，并保留原作者信息。</li><li>如果您认为该项目的脚本可能涉嫌侵犯您的权利，请及时通知，我们将在确认后及时删除</li></ul><h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><ol><li><a href="https://github.com/Binaryify/NeteaseCloudMusicApi">网易云音乐 API</a></li><li><a href="https://github.com/darknessomi/musicbox">NetEase-MusicBox</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网易云音乐自动任务&quot;&gt;&lt;a href=&quot;#网易云音乐自动任务&quot; class=&quot;headerlink&quot; title=&quot;网易云音乐自动任务&quot;&gt;&lt;/a&gt;网易云音乐自动任务&lt;/h1&gt;&lt;p&gt;
  &lt;a href=&quot;https://music.163.com/#/user/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>林业害虫识别项目需求设计</title>
    <link href="https://luckyenough-z.github.io/2022/09/04/%E6%9E%97%E4%B8%9A%E5%AE%B3%E8%99%AB%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE%E9%9C%80%E6%B1%82%E8%AE%BE%E8%AE%A1/"/>
    <id>https://luckyenough-z.github.io/2022/09/04/%E6%9E%97%E4%B8%9A%E5%AE%B3%E8%99%AB%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE%E9%9C%80%E6%B1%82%E8%AE%BE%E8%AE%A1/</id>
    <published>2022-09-04T03:49:46.000Z</published>
    <updated>2022-09-04T04:02:07.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求规格说明书及设计文档"><a href="#需求规格说明书及设计文档" class="headerlink" title="需求规格说明书及设计文档"></a>需求规格说明书及设计文档</h1><h2 id="项目场景"><a href="#项目场景" class="headerlink" title="项目场景"></a>项目场景</h2><blockquote><p>用户可以通过手机端APP拍照或者手动上传等方式提交林业有害生物图像照片，经预览，裁剪等操作处理后上传至服务器进行识别。反馈害虫种类、识别率、个数等信息。</p></blockquote><p>本团队自行设计并实现一客户端+前端到服务器进行信息交换实现项目场景。项目命名为Found Pest。消息队列开发完成后，为了维护害虫样本信息我们团队开发了一套基于Vue的前后端分离的害虫信息维护系统，下文简称“该项目”。该项目支持害虫信息识别维护等功能基本实现了项目应用场景的需求。</p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><blockquote><p>整体流程：选择图片==&gt;上传图片==&gt;识别图片==&gt;返回信息==&gt;接收信息==&gt;显示信息</p><p>​                        |    能够显示害虫样本并管理样本</p><p>​                        |    能够编辑用户上传的图片</p><p>信息维护==&gt;    |    能够在线识别</p><p>​                         |    与服务器后端进行数据交互</p><p>​                         |    能够被用户访问</p></blockquote><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="前端部分"><a href="#前端部分" class="headerlink" title="前端部分"></a>前端部分</h3><h4 id="用户-管理员共有功能"><a href="#用户-管理员共有功能" class="headerlink" title="用户/管理员共有功能"></a>用户/管理员共有功能</h4><ol><li>用户功能：<ol><li>包括用户注册和登录</li><li>查看害虫信息</li><li>忘记密码后找回密码</li></ol></li><li>害虫信息维护功能：<ol><li>浏览害虫样本信息等</li></ol></li><li>样本检索功能：<ol><li>可以检索害虫样本</li></ol></li><li>上传图片管理功能：<ol><li>管理移动端上传的图片</li></ol></li><li>数据集管理功能:</li><li>可视化展示功能</li><li>在线识别功能呢</li></ol><h2 id="技术—访问服务器部分"><a href="#技术—访问服务器部分" class="headerlink" title="技术—访问服务器部分"></a>技术—访问服务器部分</h2><h3 id="后端技术栈"><a href="#后端技术栈" class="headerlink" title="后端技术栈"></a>后端技术栈</h3><ul><li>开发工具：Pycharm</li><li>Vue：项目基础框架</li><li>html +CSS ：HTML5语言</li></ul><h3 id="前端技术栈"><a href="#前端技术栈" class="headerlink" title="前端技术栈"></a>前端技术栈</h3><ul><li>开发工具：IDEA</li><li>Vue：渐进式框架</li><li>Vue Router：VUE路由插件用来管理各个页面</li><li>VueX：VUE状态管理</li><li>Axios ：一个基于 promise 的 HTTP 库，用于GET/POST请求</li><li>Node.js+webpack：项目构建工具</li></ul><h3 id="移动端技术栈"><a href="#移动端技术栈" class="headerlink" title="移动端技术栈"></a>移动端技术栈</h3><ul><li>开发工具：Hbuilder X</li><li>Uniapp:是一个使用 <a href="https://vuejs.org/">Vue.js (opens new window)</a>开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序</li></ul><h3 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h3><h4 id="技术规格及应用介绍"><a href="#技术规格及应用介绍" class="headerlink" title="技术规格及应用介绍"></a>技术规格及应用介绍</h4><p>本项目前端基于Vue渐进式框架开发，基本遵守HTML开发规范、Vue-Cli开发规范及Webpack开发规范；后端基于Python+flask框架开发。下面将从HTTP请求开始介绍本项目的技术特点。</p><ol><li><p>通过HTTP协议访问托管在服务器端的项目，通过Nginx集群，均衡负载返回页面</p></li><li><p>页面内通过Axios提供的request方式GET/POST请求页面内的数据</p></li><li><p>Nginx接收到请求地址后指向localhost:8090前端部分打开页面</p></li><li><p>App端与服务器交互，使用Base64压缩图片与服务器进行交互</p></li></ol><h4 id="数据库模型图"><a href="#数据库模型图" class="headerlink" title="数据库模型图"></a>数据库模型图</h4><h4 id="项目工程截图"><a href="#项目工程截图" class="headerlink" title="项目工程截图"></a>项目工程截图</h4><p>​    前端部分</p><p><img src="C:\Users\LuckyEnough.z\AppData\Roaming\Typora\typora-user-images\image-20220430161809291.png" alt="image-20220430161809291" style="zoom: 50%;" /></p><p>​    后端部分</p><p><img src="C:\Users\LuckyEnough.z\AppData\Roaming\Typora\typora-user-images\image-20220430161930231.png" alt="image-20220430161930231" style="zoom: 50%;" /></p><p>移动端</p><p>​    <img src="C:\Users\LuckyEnough.z\AppData\Roaming\Typora\typora-user-images\image-20220430162034356.png" alt="image-20220430162034356" style="zoom:50%;" /></p><h2 id="技术—害虫识别算法部分"><a href="#技术—害虫识别算法部分" class="headerlink" title="技术—害虫识别算法部分"></a>技术—害虫识别算法部分</h2><p>基于YOLOV5算法实现的 害虫识别的功能，通过Flask框架接收数据与前端+App通信,前端通过Ajax.request与服务器进行交互，App端通过Uniapp原生API即uni.upload接口与服务器进行数据交互。</p><h3 id="支持害虫识别的种类"><a href="#支持害虫识别的种类" class="headerlink" title="支持害虫识别的种类"></a>支持害虫识别的种类</h3><ul><li><p>100类害虫在线样本检索</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">黑蚱蝉蟪蛄蒙古寒蝉菜蝽茶翅蝽赤条蝽麻皮蝽硕蝽大皱蝽碧蛾蜡蝉大田鳖柿广翅蜡蝉透翅疏广蜡蝉斑衣蜡蝉草履蚧悬铃木方翅网蝽中华象蜡蝉大青叶蝉小绿叶蝉刺肩普缘蝽稻棘缘蝽点蜂缘蝽钝肩普缘蝽(钝角普缘蝽)虎斑蝶金斑蝶玉带斑蛾重阳木锦斑蛾大叶黄杨尺蛾四星尺蛾小蜻蜓尺蛾扁刺蛾褐边绿刺蛾黄刺蛾红尾大蚕蛾绿尾大蚕蛾八点灰灯蛾红缘灯蛾花布灯蛾美国白蛾强污灯蛾人纹污灯蛾优美苔蛾侧柏毒蛾盗毒蛾(黄尾毒蛾)柳毒蛾线茸毒蛾菜粉蝶碧凤蝶柑橘凤蝶金凤蝶蓝凤蝶麝凤蝶丝带凤蝶玉带凤蝶樟青凤蝶洋麻圆钩蛾桃小食心虫大红蛱蝶二尾蛱蝶黑脉蛱蝶黄钩蛱蝶柳紫闪蛱蝶马尾松毛虫黄杨绢野螟桃蛀螟樟巢螟缀叶丛螟豆天蛾甘薯天蛾红天蛾蓝目天蛾葡萄天蛾雀纹天蛾霜天蛾变色夜蛾臭椿皮蛾胡桃豹夜蛾斜纹夜蛾旋目夜蛾分月扇舟蛾核桃美舟蛾杨二尾舟蛾杨扇舟蛾杨小舟蛾白星花金龟黄粉鹿花金龟日本脊吉丁</span><br><span class="line">犀角粪金龟薄翅锯天牛(中华薄翅天牛) 中华大扁锹光肩星天牛桑天牛双条杉天牛松墨天牛桃红颈天牛星天牛锈色粒肩天牛云斑白条天牛柳蓝叶甲</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>15类害虫的在线识别</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;草履蚧&quot;, &quot;麻皮蝽&quot;, &quot;日本脊吉丁&quot;, &quot;星天牛&quot;, &quot;桑天牛&quot;, &quot;松墨天牛&quot;, &quot;柳蓝叶甲&quot;, &quot;黄刺蛾&quot;, &quot;褐边绿刺蛾&quot;, &quot;丝带凤蝶&quot;, &quot;人纹污灯蛾&quot;, &quot;霜天蛾&quot;,&quot;杨扇舟蛾&quot;, &quot;杨小舟蛾&quot;, &quot;美国白蛾&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="接口对接实现样例"><a href="#接口对接实现样例" class="headerlink" title="接口对接实现样例"></a>接口对接实现样例</h3><p>前端识别接口调用样例</p><p>后端数据库</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Species</span>(db.Model):</span><br><span class="line">    <span class="comment"># 定义表名</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;t_species&#x27;</span></span><br><span class="line">    <span class="comment"># 定义列对象</span></span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>, autoincrement=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">60</span>))</span><br><span class="line">    code = db.Column(db.String(<span class="number">60</span>), unique=<span class="literal">True</span>)</span><br><span class="line">    latin_name = db.Column(db.String(<span class="number">60</span>))</span><br><span class="line">    distribution_plants = db.Column(db.Text)</span><br><span class="line">    distribution_area = db.Column(db.Text)</span><br><span class="line">    sample_path = db.Column(db.String(<span class="number">60</span>))</span><br><span class="line"></span><br><span class="line">    genus_id = db.Column(db.Integer, db.ForeignKey(<span class="string">&#x27;t_genus.id&#x27;</span>, ondelete=<span class="string">&#x27;CASCADE&#x27;</span>))</span><br><span class="line">    genus = db.relationship(<span class="string">&quot;Genus&quot;</span>, backref=db.backref(<span class="string">&#x27;specieses&#x27;</span>, cascade=<span class="string">&quot;all, delete-orphan&quot;</span>))</span><br></pre></td></tr></table></figure><Scan.vue><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Upload</span><br><span class="line">     :format=&quot;[&#x27;jpg&#x27;,&#x27;jpeg&#x27;,&#x27;png&#x27;]&quot; //规定图片格式，不一致就报错</span><br><span class="line">     :on-success=&quot;handleSuccess&quot;  //将图片选定后就执行上传方法</span><br><span class="line">     :on-format-error=&quot;handleFormatError&quot; //报错的方法</span><br><span class="line">     action=&quot;http://42.192.237.135:8090/FPIMS/detection_withFile/&quot;&gt; //请求的地址</span><br><span class="line">    &lt;Button type=&quot;primary&quot; icon=&quot;ios-cloud-upload-outline&quot;&gt;&lt;/Button&gt; //点击按钮会执行上传图片的方法</span><br><span class="line">&lt;/Upload&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    method:&#123;</span><br><span class="line">        handleSuccess (res, file) &#123;//res :临时数组用来存储返沪的信息  file：上传的图片对象</span><br><span class="line">        this.$data.original_img_path = res.save_img_path;//接收临时图片地址</span><br><span class="line">        this.$data.detect_time = res.detect_time;//接收返回识别时间</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>后端接口返回信息</p><p>app.py —-detection_withfile</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/FPIMS/detection_withFile/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span><span class="comment">#Get:接收待处理图片 #Post：将处理后的图片与识别结果返回前端</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detection_with_file</span>():  <span class="comment">#定义函数用来调用</span></span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]<span class="comment">#接收前端传来的</span></span><br><span class="line">    file.save(image_path)</span><br><span class="line">    <span class="comment"># 将保存的图片输入网络进行推测</span></span><br><span class="line">    processed_img, recognition_res = app.detect(cv2.imread(image_path),Species)</span><br><span class="line">    <span class="comment">#img_path：前端传来的的图片地址</span></span><br><span class="line">    <span class="comment">#Species:数据库对象用来查数据</span></span><br><span class="line">    <span class="comment"># 推测后的图片保存到processed目录</span></span><br><span class="line">    cv2.imwrite(<span class="string">&#x27;./picture_data/detect/processed/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(processed_filename), <span class="comment">#处理的图片)</span></span><br><span class="line">    <span class="comment"># 将“结果拼成字符串”和“推测后的图片的路径”一起传给前端</span></span><br><span class="line">    res = img_path_processed + <span class="string">&#x27;-&#x27;</span> + recognition_res <span class="comment">#结果数组</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="项目基本使用方式"><a href="#项目基本使用方式" class="headerlink" title="项目基本使用方式"></a>项目基本使用方式</h3><ol><li>运行后端app.py启动服务器</li><li>启动前端静态网页或者Vue项目 npm run server</li><li>启动手机端app</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在后端服务器文件夹运行服务器</span></span><br><span class="line">python app.py</span><br><span class="line"><span class="comment">#在前端启动Vue项目文件</span></span><br><span class="line">npm run server</span><br></pre></td></tr></table></figure><h3 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求规格说明书及设计文档&quot;&gt;&lt;a href=&quot;#需求规格说明书及设计文档&quot; class=&quot;headerlink&quot; title=&quot;需求规格说明书及设计文档&quot;&gt;&lt;/a&gt;需求规格说明书及设计文档&lt;/h1&gt;&lt;h2 id=&quot;项目场景&quot;&gt;&lt;a href=&quot;#项目场景&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数学建模学习历程</title>
    <link href="https://luckyenough-z.github.io/2022/09/03/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
    <id>https://luckyenough-z.github.io/2022/09/03/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/</id>
    <published>2022-09-03T15:16:36.000Z</published>
    <updated>2022-09-04T04:46:52.676Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/09/04/xtfmBuvcaGpjWAX.jpg" alt="birds-g7ef62656c_1920" style="zoom:33%;" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/09/04/xtfmBuvcaGpjWAX.jpg&quot; alt=&quot;birds-g7ef62656c_1920&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="学习" scheme="https://luckyenough-z.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>教材选购</title>
    <link href="https://luckyenough-z.github.io/2022/09/03/%E6%95%99%E6%9D%90%E9%80%89%E8%B4%AD/"/>
    <id>https://luckyenough-z.github.io/2022/09/03/%E6%95%99%E6%9D%90%E9%80%89%E8%B4%AD/</id>
    <published>2022-09-03T14:29:09.000Z</published>
    <updated>2022-09-04T08:35:59.481Z</updated>
    
    <content type="html"><![CDATA[<h4 id="教材选购"><a href="#教材选购" class="headerlink" title="教材选购"></a>教材选购</h4><p><i class="iconfont icon-shu">待采购列表</i></p><div class="table-container"><table><thead><tr><th>书名</th><th>IBSN</th></tr></thead><tbody><tr><td>零基础学Android全彩版</td><td>9787569208542</td></tr><tr><td>人工智能</td><td>9787302572541</td></tr><tr><td>OpenCV计算机视觉基础教程（Python版）</td><td>9787115561770</td></tr><tr><td>管理信息系统实践教程</td><td>9787302551140</td></tr></tbody></table></div><p><i class="iconfont icon--">已采购列表</i></p><div class="table-container"><table><thead><tr><th>书名</th><th>资源</th></tr></thead><tbody><tr><td>计算机网络</td><td><a href="/download/计算机网络（第8版）.pdf">计算机网络（第8版）.pdf</a></td></tr><tr><td>商务智能</td><td><a href="/download/商务智能与数据挖掘（第2版）.pdf">商务智能与数据挖掘（第2版）.pdf</a></td></tr><tr><td>计算机组成原理</td><td><a href="/download/计算机组成原理第3版.pdf">计算机组成原理第3版.pdf</a></td></tr><tr><td>操作系统原理</td><td><a href="/download/计算机操作系统（第四版）.pdf">计算机操作系统（第四版）.pdf</a></td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;教材选购&quot;&gt;&lt;a href=&quot;#教材选购&quot; class=&quot;headerlink&quot; title=&quot;教材选购&quot;&gt;&lt;/a&gt;教材选购&lt;/h4&gt;&lt;p&gt;&lt;i class=&quot;iconfont icon-shu&quot;&gt;待采购列表&lt;/i&gt;&lt;/p&gt;
&lt;div class=&quot;table-c</summary>
      
    
    
    
    
    <category term="日常" scheme="https://luckyenough-z.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>建站感言</title>
    <link href="https://luckyenough-z.github.io/2022/09/02/%E5%BB%BA%E7%AB%99%E6%84%9F%E8%A8%80/"/>
    <id>https://luckyenough-z.github.io/2022/09/02/%E5%BB%BA%E7%AB%99%E6%84%9F%E8%A8%80/</id>
    <published>2022-09-02T14:57:43.000Z</published>
    <updated>2022-09-04T04:39:50.503Z</updated>
    
    <content type="html"><![CDATA[<p>置顶链接</p><p>经过一段时间的折腾终于用 Hexo + GitHub 搭建起了一个个人博客站点:rainbow:，第一时间边学边写，弄出了这第一篇博客，心里甚是欢喜。</p><p>Hexo 是一款“快速、简洁且高效的博客框架”，支持 Markdown 的所有功能。所以，写出一篇博客必须学习 Hexo 和 Markdown 的使用规则。</p><p>H~2~O :droplet:</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;置顶链接&lt;/p&gt;
&lt;p&gt;经过一段时间的折腾终于用 Hexo + GitHub 搭建起了一个个人博客站点:rainbow:，第一时间边学边写，弄出了这第一篇博客，心里甚是欢喜。&lt;/p&gt;
&lt;p&gt;Hexo 是一款“快速、简洁且高效的博客框架”，支持 Markdown 的所有功能。</summary>
      
    
    
    
    
    <category term="经验分享" scheme="https://luckyenough-z.github.io/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
